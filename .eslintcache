[{"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/index.js":"1","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/App.js":"2","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/reportWebVitals.js":"3","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/Shotchart.js":"4","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/GradientScale.js":"5","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/DataEntry.js":"6","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/Popup.js":"7","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/LatestShot.js":"8","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Utils/Helpers.js":"9","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Index/TeamSelect.js":"10","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/Filters.js":"11","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/CheckboxSelect.js":"12","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/Loading.tsx":"13","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/Navbar.tsx":"14","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/NavButton.tsx":"15","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/Sidebar.tsx":"16","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/StatCard.tsx":"17","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/FilterCheckbox.tsx":"18","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/Undo.tsx":"19","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/PageTemplates/LoadingPage.tsx":"20","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/theme.tsx":"21","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Index/Index.tsx":"22","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/Analysis.tsx":"23"},{"size":483,"mtime":1648648917000,"results":"24","hashOfConfig":"25"},{"size":1607,"mtime":1650210687545,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1634663283631,"results":"27","hashOfConfig":"25"},{"size":44752,"mtime":1649446173482,"results":"28","hashOfConfig":"25"},{"size":1017,"mtime":1649383552760,"results":"29","hashOfConfig":"25"},{"size":6142,"mtime":1649383358744,"results":"30","hashOfConfig":"25"},{"size":473,"mtime":1639514691061,"results":"31","hashOfConfig":"25"},{"size":1453,"mtime":1649383352049,"results":"32","hashOfConfig":"25"},{"size":1630,"mtime":1639515491186,"results":"33","hashOfConfig":"25"},{"size":1083,"mtime":1649449554763,"results":"34","hashOfConfig":"25"},{"size":2297,"mtime":1649445677160,"results":"35","hashOfConfig":"25"},{"size":1456,"mtime":1650216870907,"results":"36","hashOfConfig":"25"},{"size":167,"mtime":1649434628823,"results":"37","hashOfConfig":"25"},{"size":5406,"mtime":1649447815880,"results":"38","hashOfConfig":"25"},{"size":723,"mtime":1649383363008,"results":"39","hashOfConfig":"25"},{"size":622,"mtime":1649380170639,"results":"40","hashOfConfig":"25"},{"size":791,"mtime":1650213399429,"results":"41","hashOfConfig":"25"},{"size":529,"mtime":1650213369108,"results":"42","hashOfConfig":"25"},{"size":339,"mtime":1648599206870,"results":"43","hashOfConfig":"25"},{"size":2506,"mtime":1649437824845,"results":"44","hashOfConfig":"25"},{"size":2056,"mtime":1649450091084,"results":"45","hashOfConfig":"25"},{"size":8373,"mtime":1649459962757,"results":"46","hashOfConfig":"25"},{"size":15166,"mtime":1650217827639,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"19k8s7d",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"92","usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"77"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"77"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/index.js",[],["104","105"],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/App.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/reportWebVitals.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/Shotchart.js",["106"],"import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as d3Hexbin from \"d3-hexbin\";\nimport Helpers from \"../Utils/Helpers.js\";\nimport Popup from \"./Popup.js\";\nimport DataEntry from \"./DataEntry.js\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Undo from \"./Undo.tsx\";\nimport LoadingPage from \"../PageTemplates/LoadingPage.tsx\";\nimport Sidebar from \"../ComponentTemplates/Sidebar\";\nimport LatestShot from \"./LatestShot.js\";\nimport { Grid, Box, Tooltip } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport StatCard from \"../ComponentTemplates/StatCard.tsx\";\nimport GradientScale from \"../Analysis/GradientScale.js\";\n\nexport default class Shotchart extends Component {\n  constructor(props) {\n    super(props);\n    var leagueid = \"coll\";\n    this.state = {\n      theme: this.props.theme,\n      variant: this.props.variant,\n      // loading and loading check variables\n      statesLoaded: 0,\n      statesNeeded: 2,\n      // validation of valid session info\n      hasSessionInfo: true,\n      // session info\n      sessionid: null,\n      team1: null,\n      team2: null,\n      players: [],\n      // circle display\n      multipleShotView: false,\n      circle_show: false,\n      // form info\n      popupShow: false,\n      // values to pass into DataEntry\n      current_x: \"N/A\",\n      current_y: \"N/A\",\n      current_round: 1,\n      // data on latest shot\n      latest_shot: { x: null, y: null },\n      shotList: [],\n      sessionFGA: 0,\n      sessionFGM: 0,\n      threePointLineXY: [],\n      chartSettings: {\n        // all measurements are in feet...\n        league: leagueid,\n        // basketball hoop diameter\n        basketDiameter: 1.5,\n        // baseline to backboard\n        basketProtrusionLength: 4,\n        // backboard width\n        basketWidth: 6,\n        // length of basketball court\n        courtLength: 94,\n        // width of basketball court\n        courtWidth: 50,\n        // baseline to free throw line\n        // 15 + 4 for basket protrusion\n        freeThrowLineLength: 19,\n        // radius of free throw line circle\n        freeThrowCircleRadius: 6,\n        height: undefined,\n        // length between dashes on side of the paint\n        keyMarkWidth: 0.66,\n        // width of paint\n        keyWidth: Helpers.chartSettings()[leagueid].keyWidth,\n        // locations for key tick marks\n        // [11, 14, 17] college\n        // [7, 8, 11, 14] nba\n        keyMarks: Helpers.chartSettings()[leagueid].keyMarks,\n        // radius of restricted area\n        restrictedCircleRadius: 4,\n        // baseline where three point line becomes circular\n        // 9.865 college\n        // 14 nba\n        threePointCutoffLength:\n          Helpers.chartSettings()[leagueid].threePointCutoffLength,\n        // three point line from basket\n        // 22.146 college\n        // 23.75 nba\n        threePointRadius: Helpers.chartSettings()[leagueid].threePointRadius,\n        // corner three point line from basket\n        // 21.5 college\n        // 22 nba\n        threePointSideRadius:\n          Helpers.chartSettings()[leagueid].threePointSideRadius,\n        // width of svg\n        width: 800,\n        // floater range\n        floaterRange: 14.18,\n        // rim zone\n        rimRange: 5,\n        // convert to proper x-y coordinates\n        // change the midrange for college vs. nba (should be passed in through the props)\n        leftBaselineMidrangeInside: {\n          x: (145.99621 + 250) / 10,\n          y: 81.94051 / 10,\n        },\n        rightBaselineMidrangeInside: {\n          x: (-145.99621 + 250) / 10,\n          y: 81.94051 / 10,\n        },\n        rightWingMidrangeInside: {\n          x: (68.29851 + 250) / 10,\n          y: 172.92448 / 10,\n        },\n        leftWingMidrangeInside: {\n          x: (-68.29851 + 250) / 10,\n          y: 172.92448 / 10,\n        },\n        rightFloaterInside: { x: (25.4622 + 250) / 10, y: 90.53112 / 10 },\n        leftFloaterInside: { x: (-25.4622 + 250) / 10, y: 90.53112 / 10 },\n        left3Inside: Helpers.chartSettings()[leagueid].left3Inside,\n        right3Inside: Helpers.chartSettings()[leagueid].right3Inside,\n      },\n    };\n  }\n\n  createSectionedZones(o, base) {\n    var self = this;\n    // create outside line for rim range\n    // fill based on the circle. This is not a polygon like the other shapes on the visualization\n    this.appendArcPath(\n      base,\n      o.rimRange,\n      -1 * Math.PI,\n      Math.PI,\n      o.courtWidth / 2,\n      o.visibleCourtLength - o.basketProtrusionLength - o.basketDiameter / 2,\n      \"rimXY\"\n    )\n      .attr(\"class\", \"shotzone rim-zone\" + self.props.shotchartNumber)\n      .attr(\n        \"transform\",\n        \"translate(\" +\n          o.courtWidth / 2 +\n          \", \" +\n          (o.visibleCourtLength -\n            o.basketProtrusionLength -\n            o.basketDiameter / 2) +\n          \")\"\n      );\n    // points must be in order\n    var rc3 = {\n      className: \"shotzone right-corner-three-zone\",\n      points: [\n        { x: 0, y: o.visibleCourtLength },\n        { x: 0, y: o.visibleCourtLength - o.threePointCutoffLength },\n        {\n          x: (o.courtWidth - o.threePointSideRadius * 2) / 2,\n          y: o.visibleCourtLength - o.threePointCutoffLength,\n        },\n        {\n          x: (o.courtWidth - o.threePointSideRadius * 2) / 2,\n          y: o.visibleCourtLength,\n        },\n      ],\n    };\n\n    var lc3 = {\n      className: \"shotzone left-corner-three-zone\",\n      points: [\n        {\n          x:\n            o.threePointSideRadius * 2 +\n            (o.courtWidth - o.threePointSideRadius * 2) / 2,\n          y: o.visibleCourtLength,\n        },\n        {\n          x:\n            o.threePointSideRadius * 2 +\n            (o.courtWidth - o.threePointSideRadius * 2) / 2,\n          y: o.visibleCourtLength - o.threePointCutoffLength,\n        },\n        { x: o.courtWidth, y: o.visibleCourtLength - o.threePointCutoffLength },\n        { x: o.courtWidth, y: o.visibleCourtLength },\n      ],\n    };\n    var r3 = {\n      className: \"shotzone right-three-zone\",\n      points: [\n        { x: 0, y: 0 },\n        { x: 0, y: o.visibleCourtLength - o.threePointCutoffLength },\n        {\n          x: (o.courtWidth - o.threePointSideRadius * 2) / 2,\n          y: o.visibleCourtLength - o.threePointCutoffLength,\n        },\n      ],\n    };\n\n    var r3Line = this.state.threePointLineXY.filter(function (i) {\n      // change this to match up with AP\n      return i.x < o.right3Inside.x;\n    });\n\n    r3.points = r3.points.concat(r3Line).concat({ x: 5, y: 0 });\n\n    var l3Line = this.state.threePointLineXY.filter(function (i) {\n      return i.x > o.courtWidth - o.left3Inside.x;\n    });\n\n    var l3 = {\n      className: \"shotzone left-three-zone\",\n      points: l3Line.concat([\n        {\n          x:\n            o.threePointSideRadius * 2 +\n            (o.courtWidth - o.threePointSideRadius * 2) / 2,\n          y: o.visibleCourtLength - o.threePointCutoffLength,\n        },\n        { x: o.courtWidth, y: o.visibleCourtLength - o.threePointCutoffLength },\n        { x: o.courtWidth, y: 0 },\n        { x: o.courtWidth - 5, y: 0 },\n      ]),\n    };\n\n    var m3 = {\n      className: \"shotzone middle-three-zone\",\n      points: [{ x: 5, y: 0 }],\n    };\n\n    var m3Line = this.state.threePointLineXY.filter(function (i) {\n      // change this to match with AP\n      return i.x > o.right3Inside.x && i.x < o.courtWidth - o.left3Inside.x;\n    });\n\n    m3.points = m3.points.concat(m3Line);\n    m3.points = m3.points.concat([\n      { x: o.courtWidth - 5, y: 0 },\n      { x: o.courtWidth, y: 0 },\n    ]);\n\n    var rbmr = {\n      className: \"shotzone right-baseline-midrange-zone\",\n      points: [\n        {\n          x: (o.courtWidth - o.threePointSideRadius * 2) / 2,\n          y: o.visibleCourtLength,\n        },\n      ],\n    };\n\n    var insideRbmr = this.state.floaterXY.filter(function (i) {\n      // change x portion to match AP\n      return (\n        i.y <= o.visibleCourtLength &&\n        i.y > o.visibleCourtLength - o.leftBaselineMidrangeInside.y &&\n        (i.x < o.courtWidth - o.leftBaselineMidrangeInside.x ||\n          i.x < o.courtWidth / 2)\n      );\n    });\n\n    rbmr.points = rbmr.points.concat(insideRbmr);\n    rbmr.points = rbmr.points.concat([\n      {\n        x: (o.courtWidth - o.threePointSideRadius * 2) / 2,\n        y: o.visibleCourtLength - o.threePointCutoffLength,\n      },\n    ]);\n\n    var insideLbmr = this.state.floaterXY.filter(function (i) {\n      // change x portion to match AP\n      return (\n        i.y <= o.visibleCourtLength &&\n        i.y > o.visibleCourtLength - o.rightBaselineMidrangeInside.y &&\n        (i.x > o.courtWidth - o.rightBaselineMidrangeInside.x ||\n          i.x > o.courtWidth / 2)\n      );\n    });\n\n    var lbmr = {\n      className: \"shotzone left-baseline-midrange-zone\",\n      points: insideLbmr.concat([\n        {\n          x:\n            o.threePointSideRadius * 2 +\n            (o.courtWidth - o.threePointSideRadius * 2) / 2,\n          y: o.visibleCourtLength,\n        },\n        {\n          x:\n            o.threePointSideRadius * 2 +\n            (o.courtWidth - o.threePointSideRadius * 2) / 2,\n          y: o.visibleCourtLength - o.threePointCutoffLength,\n        },\n      ]),\n    };\n\n    var insideRwmr = this.state.floaterXY.filter(function (i) {\n      // change x portion to match AP\n      return (\n        i.y < o.visibleCourtLength &&\n        i.y >= o.visibleCourtLength - o.rightWingMidrangeInside.y &&\n        i.x < o.courtWidth / 2 &&\n        i.y <= o.visibleCourtLength &&\n        i.y < o.visibleCourtLength - o.rightBaselineMidrangeInside.y &&\n        i.x < o.courtWidth - o.rightBaselineMidrangeInside.x\n      );\n    });\n\n    var outsideRwmr = r3Line;\n\n    var rwmr = {\n      className: \"shotzone right-wing-midrange-zone\",\n      points: outsideRwmr.reverse().concat(insideRwmr),\n    };\n\n    var insideLwmr = this.state.floaterXY.filter(function (i) {\n      // change x portion to match AP\n      return (\n        i.y < o.visibleCourtLength &&\n        i.y >= o.visibleCourtLength - o.leftWingMidrangeInside.y &&\n        i.x > o.courtWidth / 2 &&\n        i.y <= o.visibleCourtLength &&\n        i.y < o.visibleCourtLength - o.leftBaselineMidrangeInside.y &&\n        i.x > o.courtWidth - o.leftBaselineMidrangeInside.x\n      );\n    });\n\n    var outsideLwmr = l3Line;\n\n    var lwmr = {\n      className: \"shotzone left-wing-midrange-zone\",\n      points: outsideLwmr.concat(insideLwmr.reverse()),\n    };\n\n    var insideMmr = this.state.floaterXY.filter(function (i) {\n      // change x portion to match AP\n      return i.y < o.visibleCourtLength - o.rightWingMidrangeInside.y;\n    });\n\n    var outsideMmr = m3Line;\n\n    var mmr = {\n      className: \"shotzone middle-midrange-zone\",\n      points: outsideMmr.concat(insideMmr.reverse()),\n    };\n\n    var insideRf = this.state.rimXY.filter(function (i) {\n      return (\n        i.y > o.visibleCourtLength - o.rightFloaterInside.y &&\n        i.x < o.rightFloaterInside.x &&\n        i.x < o.courtWidth / 2\n      );\n    });\n\n    var outsideRf = insideRbmr.concat(insideRwmr);\n\n    var rf = {\n      className: \"shotzone right-floater-zone\",\n      points: outsideRf.concat(insideRf.reverse()),\n    };\n\n    var insideLf = this.state.rimXY.filter(function (i) {\n      return (\n        i.y > o.visibleCourtLength - o.leftFloaterInside.y &&\n        i.x > o.leftFloaterInside.x &&\n        i.x > o.courtWidth / 2\n      );\n    });\n\n    var outsideLf = insideLbmr.reverse().concat(insideLwmr);\n\n    var lf = {\n      className: \"shotzone left-floater-zone\",\n      points: insideLf.concat(outsideLf),\n    };\n\n    var insideMf = this.state.rimXY.filter(function (i) {\n      return i.y < o.visibleCourtLength - o.leftFloaterInside.y;\n    });\n\n    var outsideMf = insideMmr;\n\n    var mf = {\n      className: \"shotzone middle-floater-zone\",\n      points: outsideMf.concat(insideMf),\n    };\n\n    var zonePoints = {\n      labeledzones: {\n        rc3: rc3.points,\n        lc3: lc3.points,\n        r3: r3.points,\n        l3: l3.points,\n        m3: m3.points,\n        rbmr: rbmr.points,\n        lbmr: lbmr.points,\n        rwmr: rwmr.points,\n        lwmr: lwmr.points,\n        mmr: mmr.points,\n        lf: lf.points,\n        rf: rf.points,\n        mf: mf.points,\n        rim: this.state.rimXY,\n      },\n      lst_zones: [\n        rc3,\n        lc3,\n        r3,\n        l3,\n        m3,\n        rbmr,\n        lbmr,\n        rwmr,\n        lwmr,\n        mmr,\n        lf,\n        rf,\n        mf,\n      ],\n    };\n\n    base\n      .selectAll(\"polygon\")\n      .data(zonePoints.lst_zones)\n      .enter()\n      .append(\"polygon\")\n      .attr(\"class\", function (d) {\n        return d.className + self.props.shotchartNumber;\n      })\n      .attr(\"points\", function (d) {\n        return d.points\n          .map(function (d) {\n            return [d.x, d.y].join(\",\");\n          })\n          .join(\" \");\n      });\n\n    this.labelShotZones(o, base, zonePoints);\n  }\n\n  findCentroid(points) {\n    let a = 0,\n      x = 0,\n      y = 0,\n      l = points.length;\n\n    for (let i = 0; i < l; i++) {\n      const s = i === l - 1 ? 0 : i + 1,\n        v0 = points[i],\n        v1 = points[s],\n        f = v0.x * v1.y - v1.x * v0.y;\n\n      a += f;\n      x += (v0.x + v1.x) * f;\n      y += (v0.y + v1.y) * f;\n    }\n\n    const d = a * 3;\n\n    return [x / d, y / d];\n  }\n\n  labelShotZones(o, base, zonePoints) {\n    var zoneLookup = {\n      rc3: \"R-C3\",\n      lc3: \"L-C3\",\n      r3: \"R-ATB\",\n      l3: \"L-ATB\",\n      m3: \"M-ATB\",\n      rbmr: \"RB-MR\",\n      lbmr: \"LB-MR\",\n      rwmr: \"RW-MR\",\n      lwmr: \"LW-MR\",\n      mmr: \"M-MR\",\n      lf: \"L-FL\",\n      rf: \"R-FL\",\n      mf: \"M-FL\",\n      rim: \"RIM\",\n    };\n\n    var zoneCSS = {\n      rc3: \"right-corner-three-zone\",\n      lc3: \"left-corner-three-zone\",\n      r3: \"right-three-zone\",\n      l3: \"left-three-zone\",\n      m3: \"middle-three-zone\",\n      rbmr: \"right-baseline-midrange-zone\",\n      lbmr: \"left-baseline-midrange-zone\",\n      rwmr: \"right-wing-midrange-zone\",\n      lwmr: \"left-wing-midrange-zone\",\n      mmr: \"middle-midrange-zone\",\n      lf: \"left-floater-zone\",\n      rf: \"right-floater-zone\",\n      mf: \"middle-floater-zone\",\n      rim: \"rim-zone\",\n    };\n\n    for (var key in zoneLookup) {\n      var tempData = this.findShotZoneData(zoneLookup[key])[0];\n      tempData =\n        tempData == null ? { fga: 0, fgm: 0, percentile: 0 } : tempData;\n      var center = this.findCentroid(zonePoints.labeledzones[key]);\n      var prettyFormat;\n\n      if (key === \"rim\") {\n        prettyFormat = { top: -1.5, bottom: 3, left: 0, right: 0 };\n      } else if (key === \"mf\") {\n        prettyFormat = { top: 0, bottom: 3, left: 0, right: 0 };\n      } else if (key === \"lf\" && o.league === \"nba\") {\n        prettyFormat = { top: 0, bottom: 2, left: 0, right: 2 };\n      } else if (key === \"rf\" && o.league === \"nba\") {\n        prettyFormat = { top: 0, bottom: 2, left: -2, right: 0 };\n      } else {\n        prettyFormat = { top: 0, bottom: 2, left: 0, right: 0 };\n      }\n      base\n        .append(\"text\")\n        .text(tempData.fgm + \"/\" + tempData.fga)\n        .attr(\"x\", center[0] + prettyFormat.left + prettyFormat.right)\n        .attr(\"y\", center[1] + prettyFormat.top)\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"class\", zoneCSS[key] + \"-text\");\n\n      base\n        .append(\"text\")\n        .text(this.getPrettyPercentage(tempData.fgm, tempData.fga))\n        .attr(\"x\", center[0] + prettyFormat.left + prettyFormat.right)\n        .attr(\"y\", center[1] + prettyFormat.bottom)\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"class\", zoneCSS[key] + \"-text\");\n\n      d3.select(\".\" + zoneCSS[key] + this.props.shotchartNumber).style(\n        \"fill\",\n        this.shotZoneColor(tempData.percentile)\n      );\n    }\n  }\n\n  createColorScale() {\n    var colors = d3\n      .scaleLinear()\n      .domain([0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100])\n      .range([\n        \"#053061\",\n        \"#2166ac\",\n        \"#4393c3\",\n        \"#92c5de\",\n        \"#d1e5f0\",\n        \"#fddbc7\",\n        \"#f4a582\",\n        \"#d6604d\",\n        \"#b2182b\",\n        \"#67001f\",\n      ]);\n    return colors;\n  }\n\n  shotZoneColor(perc) {\n    var colors = this.createColorScale();\n    return colors(perc);\n  }\n\n  getPrettyPercentage(fgm, fga) {\n    if (fga === 0) return \"0%\";\n    return (((fgm / fga) * 10000) / 100).toFixed(1) + \"%\";\n  }\n\n  findShotZoneData(shotzone) {\n    return this.props.data.filter(function (i) {\n      console.log(shotzone);\n      return \"RIM\" === shotzone;\n    });\n  }\n\n  // helper function to create an arcs (restricted, 3 point line, free throw circle)\n  appendArcPath(\n    base,\n    radius,\n    startAngle,\n    endAngle,\n    translateX,\n    translateY,\n    xyState\n  ) {\n    // amount of line segments for the arc\n    var points = 1500;\n    var a = d3\n      .scaleLinear()\n      .domain([0, points - 1])\n      .range([startAngle, endAngle]);\n\n    var temp = [];\n    var line = d3\n      .lineRadial()\n      .radius(radius)\n      .angle(function (d, i) {\n        // stash the angle and radius, while they are calculated\n        // angle must be rotated...\n        // use / 2 because we are in radians not degrees (rotate the angle)\n        temp.push({\n          x: translateX + radius * Math.cos(a(i) - Math.PI / 2),\n          y: translateY + radius * Math.sin(a(i) - Math.PI / 2),\n        });\n        return a(i);\n      });\n\n    this.state[xyState] = temp;\n\n    return base.append(\"path\").datum(d3.range(points)).attr(\"d\", line);\n  }\n\n  // draw basketball court\n  drawCourt() {\n    var o = this.state.chartSettings;\n\n    var calculateVisibleCourtLength = function () {\n      // length of halfcourt\n      var halfCourtLength = o.courtLength / 2;\n      // length of three point line away from basket\n      var threePointLength = o.threePointRadius + o.basketProtrusionLength;\n      // visible court does not include the entire halfcourt (Heaves not included)\n      // can adjust this depending on whether or not we want deep threes included\n      o.visibleCourtLength =\n        threePointLength + (halfCourtLength - threePointLength) / 2;\n    };\n\n    // create visibility dimensions\n    calculateVisibleCourtLength();\n\n    const width = o.courtWidth;\n    const height = o.visibleCourtLength;\n\n    const node = this.node;\n\n    var background = d3\n      .select(node)\n      .attr(\"width\", o.width)\n      .attr(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    background\n      .append(\"rect\")\n      .attr(\"fill\", this.state.variant === undefined ? \"transparent\" : this.state.theme === undefined ? \"white\" : this.state.theme.palette.secondary.main)\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    // create base SVG canvas to draw court on\n    var base = d3\n      .select(node)\n      .attr(\"width\", o.width)\n      .attr(\"viewBox\", \"0 0 \" + o.courtWidth + \" \" + o.visibleCourtLength)\n      .append(\"g\")\n      .attr(\"class\", \"shot-chart-court\");\n    if (o.height) base.attr(\"height\", o.height);\n\n    // create paint area\n    base\n      .append(\"rect\")\n      .attr(\"class\", \"shot-chart-court-key\")\n      .attr(\"x\", o.courtWidth / 2 - o.keyWidth / 2)\n      .attr(\"y\", o.visibleCourtLength - o.freeThrowLineLength)\n      .attr(\"width\", o.keyWidth)\n      .attr(\"height\", o.freeThrowLineLength);\n\n    // create baseline\n    base\n      .append(\"line\")\n      .attr(\"class\", \"shot-chart-court-baseline\")\n      .attr(\"x1\", 0)\n      .attr(\"y1\", o.visibleCourtLength)\n      .attr(\"x2\", o.courtWidth)\n      .attr(\"y2\", o.visibleCourtLength);\n\n    // create angle for three point arc (tangent - in rads)\n    var tpAngle = Math.atan(\n      o.threePointSideRadius /\n        (o.threePointCutoffLength -\n          o.basketProtrusionLength -\n          o.basketDiameter / 2)\n    );\n\n    // create outer three point line\n    this.appendArcPath(\n      base,\n      o.threePointRadius,\n      -1 * tpAngle,\n      tpAngle,\n      o.courtWidth / 2,\n      o.visibleCourtLength - o.basketProtrusionLength - o.basketDiameter / 2,\n      \"threePointLineXY\"\n    )\n      .attr(\"class\", \"shot-chart-court-3pt-line\")\n      .attr(\n        \"transform\",\n        \"translate(\" +\n          o.courtWidth / 2 +\n          \", \" +\n          (o.visibleCourtLength -\n            o.basketProtrusionLength -\n            o.basketDiameter / 2) +\n          \")\"\n      );\n\n    // create three point line standout\n    [1, -1].forEach(function (n) {\n      base\n        .append(\"line\")\n        .attr(\"class\", \"shot-chart-court-3pt-line\")\n        .attr(\"x1\", o.courtWidth / 2 + o.threePointSideRadius * n)\n        .attr(\"y1\", o.visibleCourtLength - o.threePointCutoffLength)\n        .attr(\"x2\", o.courtWidth / 2 + o.threePointSideRadius * n)\n        .attr(\"y2\", o.visibleCourtLength);\n    });\n\n    // restricted circle\n    this.appendArcPath(\n      base,\n      o.restrictedCircleRadius,\n      (-1 * Math.PI) / 2,\n      Math.PI / 2,\n      o.courtWidth / 2,\n      o.visibleCourtLength - o.basketProtrusionLength - o.basketDiameter / 2,\n      \"restrictedAreaXY\"\n    )\n      .attr(\"class\", \"shot-chart-court-restricted-area\")\n      .attr(\n        \"transform\",\n        \"translate(\" +\n          o.courtWidth / 2 +\n          \", \" +\n          (o.visibleCourtLength -\n            o.basketProtrusionLength -\n            o.basketDiameter / 2) +\n          \")\"\n      );\n\n    // create out of paint free throw circle\n    this.appendArcPath(\n      base,\n      o.freeThrowCircleRadius,\n      (-1 * Math.PI) / 2,\n      Math.PI / 2,\n      o.courtWidth / 2,\n      o.visibleCourtLength - o.freeThrowLineLength,\n      \"ftOutXY\"\n    )\n      .attr(\"class\", \"shot-chart-court-ft-circle-top\")\n      .attr(\n        \"transform\",\n        \"translate(\" +\n          o.courtWidth / 2 +\n          \", \" +\n          (o.visibleCourtLength - o.freeThrowLineLength) +\n          \")\"\n      );\n\n    // create in paint free throw circle (dashed - css)\n\n    if (o.league === \"nba\") {\n      this.appendArcPath(\n        base,\n        o.freeThrowCircleRadius,\n        Math.PI / 2,\n        1.5 * Math.PI\n      )\n        .attr(\"class\", \"shot-chart-court-ft-circle-bottom\")\n        .attr(\n          \"transform\",\n          \"translate(\" +\n            o.courtWidth / 2 +\n            \", \" +\n            (o.visibleCourtLength - o.freeThrowLineLength) +\n            \")\"\n        );\n    } else if (o.league === \"coll\") {\n      // lane block (college)\n      base\n        .append(\"rect\")\n        .attr(\"class\", \"shot-chart-court-key-block\")\n        .attr(\"x\", o.courtWidth / 2 - o.keyWidth / 2 - 0.66)\n        .attr(\"y\", o.visibleCourtLength - 7)\n        .attr(\"width\", 0.66)\n        .attr(\"height\", 1)\n        .style(\"fill\", \"black\");\n\n      base\n        .append(\"rect\")\n        .attr(\"class\", \"shot-chart-court-key-block\")\n        .attr(\"x\", o.courtWidth / 2 + o.keyWidth / 2)\n        .attr(\"y\", o.visibleCourtLength - 7)\n        .attr(\"width\", 0.66)\n        .attr(\"height\", 1)\n        .style(\"fill\", \"black\");\n    }\n\n    // box marks for key\n    o.keyMarks.forEach(function (mark) {\n      [1, -1].forEach(function (n) {\n        base\n          .append(\"line\")\n          .attr(\"class\", \"shot-chart-court-key-mark\")\n          .attr(\n            \"x1\",\n            o.courtWidth / 2 + (o.keyWidth / 2) * n + o.keyMarkWidth * n\n          )\n          .attr(\"y1\", o.visibleCourtLength - mark)\n          .attr(\"x2\", o.courtWidth / 2 + (o.keyWidth / 2) * n)\n          .attr(\"y2\", o.visibleCourtLength - mark);\n      });\n    });\n\n    // create backboard\n    base\n      .append(\"line\")\n      .attr(\"class\", \"shot-chart-court-backboard\")\n      .attr(\"x1\", o.courtWidth / 2 - o.basketWidth / 2)\n      .attr(\"y1\", o.visibleCourtLength - o.basketProtrusionLength)\n      .attr(\"x2\", o.courtWidth / 2 + o.basketWidth / 2)\n      .attr(\"y2\", o.visibleCourtLength - o.basketProtrusionLength);\n\n    // create rim\n    base\n      .append(\"circle\")\n      .attr(\"class\", \"shot-chart-court-hoop\")\n      .attr(\"cx\", o.courtWidth / 2)\n      .attr(\n        \"cy\",\n        o.visibleCourtLength - o.basketProtrusionLength - o.basketDiameter / 2\n      )\n      .attr(\"r\", o.basketDiameter / 2);\n\n    if (this.props.variant === \"zone-map\" && this.props.data.length) {\n      this.appendArcPath(\n        base,\n        o.floaterRange,\n        -1 * Math.PI,\n        Math.PI,\n        o.courtWidth / 2,\n        o.visibleCourtLength - o.basketProtrusionLength - o.basketDiameter / 2,\n        \"floaterXY\"\n      )\n        .attr(\"class\", \"shotzone floater\")\n        .attr(\n          \"transform\",\n          \"translate(\" +\n            o.courtWidth / 2 +\n            \", \" +\n            (o.visibleCourtLength -\n              o.basketProtrusionLength -\n              o.basketDiameter / 2) +\n            \")\"\n        );\n      this.createSectionedZones(o, base);\n    } else if (\n      this.props.variant === \"hex-zone\" ||\n      this.props.variant === \"hex-density\"\n    ) {\n      var chart = d3\n        .select(node)\n        .attr(\"width\", o.width)\n        .attr(\"viewBox\", \"0 0 \" + 50 + \" \" + 36.573);\n\n      var data = this.props.data;\n\n      var x = d3.scaleLinear().domain([0, 50]).range([0, width]);\n\n      // Add Y axis\n      var y = d3.scaleLinear().domain([0, 36.573]).range([0, height]);\n\n      var inputForHexbinFun = [];\n      data.forEach(function (d) {\n        inputForHexbinFun.push([x(d.x), y(d.y), d.make]); // Note that we had the transform value of X and Y !\n      });\n\n      // Prepare a color palette\n      var color = d3\n        .scaleSequential(d3.interpolateLab(\"#193a6f\", \"#f98125\"))\n        .domain([0, 1]);\n\n      // Compute the hexbin data\n      var hexbin = d3Hexbin\n        .hexbin()\n        .radius(2.225) // size of the bin in px\n        .extent([\n          [0, 0],\n          [width, height],\n        ]);\n\n      if (this.props.variant === \"hex-density\") {\n        if (hexbin(inputForHexbinFun).length > 0) {\n          var longest = hexbin(inputForHexbinFun).sort((a, b) => {\n            return b.length - a.length;\n          })[0];\n          color = d3\n            .scaleSequential(d3.interpolateLab(\"#193a6f\", \"#f98125\"))\n            .domain([1, longest.length]);\n          // Plot the hexbins\n\n          chart\n            .append(\"clipPath\")\n            .attr(\"id\", \"clip\")\n            .append(\"rect\")\n            .attr(\"width\", width)\n            .attr(\"height\", height);\n\n          chart\n            .append(\"g\")\n            .attr(\"clip-path\", \"url(#clip)\")\n            .selectAll(\"path\")\n            .data(hexbin(inputForHexbinFun))\n            .enter()\n            .append(\"path\")\n            .attr(\"d\", hexbin.hexagon())\n            .attr(\"opacity\", \"85%\")\n            .attr(\"transform\", function (d) {\n              return \"translate(\" + d.x + \",\" + d.y + \")\";\n            })\n            .attr(\"fill\", function (d) {\n              return color(d.length);\n            });\n        }\n      } else {\n        // Plot the hexbins\n        chart\n          .append(\"clipPath\")\n          .attr(\"id\", \"clip\")\n          .append(\"rect\")\n          .attr(\"width\", width)\n          .attr(\"height\", height);\n\n        chart\n          .append(\"g\")\n          .attr(\"clip-path\", \"url(#clip)\")\n          .selectAll(\"path\")\n          .data(hexbin(inputForHexbinFun))\n          .enter()\n          .append(\"path\")\n          .attr(\"d\", hexbin.hexagon())\n          .attr(\"opacity\", \"85%\")\n          .attr(\"transform\", function (d) {\n            return \"translate(\" + d.x + \",\" + d.y + \")\";\n          })\n          .attr(\"fill\", function (d) {\n            const group = d.slice(0);\n            let sum = 0;\n            group.forEach((item) => {\n              sum = sum + item[2];\n            });\n            return color(sum / group.length);\n          });\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.drawCourt();\n    // grab our players and teams for selecting a shot\n    // next steps: call the player API when a team is selected\n    // /players?teamid={teamid}\n\n    this.updateSessionInfo();\n\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n\n    if (this.props.variant === undefined) {\n      if (urlParams.get(\"team2\") !== \"\" && urlParams.get(\"team2\") !== \"null\") {\n        this.setState({ statesNeeded: this.state.statesNeeded + 1 });\n      }\n\n      if (urlParams.has(\"team1\") && urlParams.has(\"sessionid\")) {\n        if (urlParams.get(\"team1\") !== \"null\") {\n          Helpers.getFetch(\n            \"/team/roster?teamid=\" + urlParams.get(\"team1\") + \"&seasonyear=2021\"\n          )\n            .then((res) => {\n              res.json().then((data) => {\n                this.setState({ players: data });\n                this.setState({ statesLoaded: this.state.statesLoaded + 1 });\n              });\n            })\n            .catch((err) => {\n              console.log(err);\n              window.location = \"/\";\n            });\n        }\n\n        if (urlParams.get(\"sessionid\") !== \"null\") {\n          Helpers.getFetch(\n            \"/davidson/shots?sessionid=\" + urlParams.get(\"sessionid\")\n          )\n            .then((res) => {\n              res.json().then((data) => {\n                if (data.length !== 0) {\n                  this.setState({\n                    statesLoaded: this.state.statesLoaded + 1,\n                    shotList: data,\n                    latest_shot: data.slice(-1).pop(),\n                    circle_show: true,\n                  });\n                  this.updateStats();\n                } else {\n                  this.setState({\n                    statesLoaded: this.state.statesLoaded + 1,\n                    circle_show: false,\n                  });\n                }\n              });\n            })\n            .catch((err) => {\n              console.log(err);\n              window.location = \"/\";\n            });\n        }\n\n        if (\n          urlParams.get(\"team2\") !== \"\" &&\n          urlParams.get(\"team2\") !== \"null\"\n        ) {\n          Helpers.getFetch(\n            \"/team/roster?teamid=\" + urlParams.get(\"team2\") + \"&seasonyear=2021\"\n          )\n            .then((res) => {\n              res.json().then((data) => {\n                this.setState({ players: this.state.players.concat(data) });\n                this.setState({ statesLoaded: this.state.statesLoaded + 1 });\n              });\n            })\n            .catch((err) => {\n              console.log(err);\n              window.location = \"/\";\n            });\n        }\n      } else {\n        window.location = \"/\";\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    this.drawCourt();\n  }\n\n  clicked = (evt) => {\n    // get click, convert to viewbox coordinates\n    const [x, y] = [evt.clientX, evt.clientY];\n    const svg = document.getElementById(\"court-diagram\");\n    const pt = svg.createSVGPoint();\n    pt.x = x;\n    pt.y = y;\n    const svgP = pt.matrixTransform(svg.getScreenCTM().inverse());\n    this.setState(() => {\n      return { current_x: svgP.x, current_y: svgP.y, popupShow: true };\n    });\n  };\n\n  closeEntry = () => {\n    this.setState(() => {\n      return { popupShow: false };\n    });\n  };\n\n  updateStats = () => {\n    const shotsTaken = this.state.shotList.length;\n    if (shotsTaken === 0) {\n    } else {\n      let sum = 0;\n      this.state.shotList.forEach((item) => {\n        sum = sum + item.make;\n      });\n      this.setState({\n        sessionFGA: this.state.shotList.length,\n        sessionFGM: sum,\n      });\n    }\n  };\n\n  submitShotList = (newData) => {\n    this.setState({ current_round: newData.round });\n    Helpers.postFetch(\n      \"/davidson/shots\",\n      JSON.stringify([\n        {\n          sessionid: parseInt(this.state.sessionid),\n          teamseasonid: newData.teamseasonid,\n          playerid: newData.playerid,\n          x: newData.x_coord,\n          y: newData.y_coord,\n          dateadded: new Date(),\n          make: newData.shotMade,\n          round: newData.round,\n          contesttype: newData.contested,\n          shottype: newData.shotType,\n        },\n      ])\n    )\n      .then((res) => {\n        if (res.status !== 201) {\n          console.log(\"error with post fetch\");\n        } else {\n          Helpers.getFetch(\"/davidson/shots?sessionid=\" + this.state.sessionid)\n            .then((res) => {\n              res.json().then((data) => {\n                if (data.length !== 0) {\n                  this.setState({\n                    shotList: data,\n                    latest_shot: data.slice(-1).pop(),\n                  });\n                  this.setState({ circle_show: true });\n                  this.updateStats();\n                } else {\n                  this.setState({\n                    circle_show: false,\n                  });\n                }\n              });\n            })\n            .catch((err) => {\n              console.log(err);\n              window.location = \"/\";\n            });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  undoShotList = () => {\n    if (this.state.shotList.length !== 0) {\n      Helpers.deleteFetch(\n        \"/davidson/shots\",\n        JSON.stringify([this.state.latest_shot])\n      )\n        .then((res) => {\n          if (res.status !== 202) {\n            console.log(\"error with delete fetch\");\n          } else {\n            Helpers.getFetch(\n              \"/davidson/shots?sessionid=\" + this.state.sessionid\n            )\n              .then((res) => {\n                res.json().then((data) => {\n                  if (data.length !== 0) {\n                    this.setState({\n                      shotList: data,\n                      latest_shot: data.slice(-1).pop(),\n                    });\n                    this.setState({ circle_show: true });\n                    this.updateStats();\n                  } else {\n                    this.setState({\n                      circle_show: false,\n                    });\n                  }\n                });\n              })\n              .catch((err) => {\n                console.log(err);\n                window.location = \"/\";\n              });\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      console.log(\"nothing to undo\");\n    }\n  };\n\n  updateMultipleShot = () => {\n    this.setState((pastState) => {\n      return { multipleShotView: !pastState.multipleShotView };\n    });\n  };\n\n  updateCircleShow = () => {\n    this.setState(() => {\n      return { circle_show: true };\n    });\n  };\n\n  updateSessionInfo = () => {\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    this.setState({\n      sessionid: urlParams.get(\"sessionid\"),\n      team1: urlParams.get(\"team1\"),\n      team2: urlParams.get(\"team2\"),\n    });\n    if (this.state.team1 === null) {\n      this.setState({\n        hasSessionInfo: false,\n      });\n    }\n  };\n\n  getFGPercent = () => {\n    console.log(\"called\");\n    const shotsTaken = this.state.shotList.length;\n    if (shotsTaken === 0) {\n      return \"0%\";\n    } else {\n      let sum = 0;\n      this.state.shotList.forEach((item) => {\n        sum = sum + item.make;\n      });\n    }\n  };\n\n  render() {\n    if (this.props.variant === undefined) {\n      // creating circles and tooltip depending on shot view type\n      let circles = this.state.multipleShotView ? (\n        this.state.shotList.map((shot, index) => (\n          <Tooltip\n            title={\n              <React.Fragment>\n                <Typography variant=\"p\">Shooter: {shot.personname}</Typography>\n                <br />\n                <Typography variant=\"p\">Round: {shot.round}</Typography>\n                <br />\n                <Typography variant=\"p\">Shot Type: {shot.shottype}</Typography>\n                <br />\n                <Typography variant=\"p\">\n                  Shot Contest: {shot.contesttype}\n                </Typography>\n                <br />\n              </React.Fragment>\n            }\n          >\n            <circle\n              className=\"shot-circle\"\n              key={index + 1}\n              fill={shot[\"make\"] === 1 ? \"#90BE6D\" : \"#F94144\"}\n              r=\"1%\"\n              cx={shot.x}\n              cy={shot.y}\n            />\n          </Tooltip>\n        ))\n      ) : this.state.circle_show ? (\n        <Tooltip\n          title={\n            <React.Fragment>\n              <Typography variant=\"p\">\n                Shooter: {this.state.latest_shot.personname}\n              </Typography>\n              <br />\n              <Typography variant=\"p\">\n                Round: {this.state.latest_shot.round}\n              </Typography>\n              <br />\n              <Typography variant=\"p\">\n                Shot Type: {this.state.latest_shot.shottype}\n              </Typography>\n              <br />\n              <Typography variant=\"p\">\n                Shot Contest: {this.state.latest_shot.contesttype}\n              </Typography>\n              <br />\n            </React.Fragment>\n          }\n        >\n          <circle\n            className=\"shot-circle\"\n            key={this.state.shotList.length + 1}\n            fill={this.state.latest_shot[\"make\"] === 1 ? \"#90BE6D\" : \"#F94144\"}\n            r=\"1%\"\n            cx={this.state.latest_shot.x}\n            cy={this.state.latest_shot.y}\n          />\n        </Tooltip>\n      ) : null;\n\n      if (this.state.statesNeeded === this.state.statesLoaded) {\n        return (\n          <Box>\n            <Box sx={{ p: 2, backgroundColor: this.props.theme.palette.secondary.main, minHeight: \"100vh\" }}>\n              <Grid container spacing={2} justifyContent=\"space-evenly\">\n                <Grid item md={7} sm={12}>\n                  <Box\n                    sx={{\n                      p: 5,\n                      boxShadow:\n                        10,\n                      background: this.props.theme.palette.secondary.main,\n                      borderRadius: 2.5,\n                    }}\n                  >\n                    <svg\n                      id=\"court-diagram\"\n                      style={{ width: \"100%\" }}\n                      ref={(node) => (this.node = node)}\n                      onClick={this.clicked}\n                    >\n                      {this.state.circle_show ? circles : null}\n                    </svg>\n                    {this.state[\"popupShow\"] ? (\n                      <Popup\n                        header={\"SHOT DATA ENTRY\"}\n                        closePopup={this.closeEntry}\n                        content={\n                          <DataEntry\n                            players={this.state.players}\n                            round={this.state.current_round}\n                            x_coord={this.state[\"current_x\"]}\n                            y_coord={this.state[\"current_y\"]}\n                            submitData={this.submitShotList}\n                            showCircle={this.updateCircleShow}\n                            closePopup={this.closeEntry}\n                            showClose={true}\n                          />\n                        }\n                        showClose={true}\n                      />\n                    ) : null}\n                  </Box>\n                </Grid>\n                <Grid item md={5} sm={12}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                      <Box\n                        sx={{\n                          p: 2,\n                          boxShadow:\n                           10,\n                          background: this.props.theme.palette.secondary.main,\n                          borderRadius: 2.5,\n                        }}\n                      >\n                        <Grid\n                          container\n                          spacing={2}\n                          justifyContent=\"space-around\"\n                          alignItems=\"center\"\n                        >\n                          <Grid item xs={12}>\n                            <Typography variant=\"h2\" color=\"text.primary\">OPTIONS</Typography>\n                          </Grid>\n                          <Grid item xs={5} style={{ textAlign: \"center\" }}>\n                            <FormControlLabel\n                              className=\"display-switch\"\n                              sx={{color: this.props.theme.palette.text.primary}}\n                              control={\n                                <Switch\n                                  color=\"primary\"\n                                  onClick={this.updateMultipleShot}\n                                  value={this.state.multipleShotView}\n                                />\n                              }\n                              label=\"Multiple Shots\"\n                            />\n                          </Grid>\n                          <Grid item />\n                          <Grid item xs={5} style={{ textAlign: \"center\" }}>\n                            <Undo undoFunction={this.undoShotList} />\n                          </Grid>\n                        </Grid>\n                      </Box>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Box\n                        sx={{\n                          p: 2,\n                          boxShadow:\n                            10,\n                          background: this.props.theme.palette.secondary,\n                          borderRadius: 2.5,\n\n                        }}\n                      >\n                        <Sidebar\n                          header={\"LATEST SHOT\"}\n                          theme={this.props.theme}\n                          content={<LatestShot data={this.state.latest_shot} />}\n                        />\n                      </Box>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Box\n                        sx={{\n                          p: 2,\n                          boxShadow:\n                            10,\n                          background: this.props.theme.palette.secondary.main,\n                          borderRadius: 2.5,\n                        }}\n                      >\n                        <Grid\n                          container\n                          spacing={1}\n                          justifyContent=\"space-evenly\"\n                          alignItems=\"center\"\n                        >\n                          <Grid item xs={12}>\n                            <Typography variant=\"h2\" color=\"text.primary\">SESSION STATS</Typography>\n                          </Grid>\n                          <Grid item xs={4}>\n                            <StatCard\n                              name=\"FGM\"\n                              content={this.state.sessionFGM}\n                              theme={this.props.theme}\n                            />\n                          </Grid>\n                          <Grid item xs={4}>\n                            <StatCard\n                              name=\"FGA\"\n                              content={this.state.sessionFGA}\n                              theme={this.props.theme}\n                            />\n                          </Grid>\n                          <Grid item xs={4}>\n                            <StatCard\n                              name=\"FG%\"\n                              content={\n                                (\n                                  (100 * this.state.sessionFGM) /\n                                  this.state.sessionFGA\n                                ).toFixed(0) + \"%\"\n                                \n                              }\n                              theme={this.props.theme}\n                            />\n                          </Grid>\n                        </Grid>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        );\n      } else {\n        return (\n          <div>\n            <LoadingPage\n              loaded={this.state.statesLoaded}\n              needed={this.state.statesNeeded}\n              theme={this.props.theme}\n            />\n          </div>\n        );\n      }\n    } else if (\n      this.props.variant === \"hex-zone\" ||\n      this.props.variant === \"hex-density\"\n    ) {\n      return (\n        <div style={{ width: \"100%\" }}>\n          <svg\n            id=\"court-analysis-diagram\"\n            style={{ width: \"100%\" }}\n            ref={(node) => (this.node = node)}\n          ></svg>\n          <GradientScale\n            content={\n              this.props.variant === \"hex-zone\"\n                ? [\"0%\", \"100%\", \"FG%\"]\n                : [\"Fewer\", \"More\", \"FGA\"]\n            }\n          />\n        </div>\n      );\n    } else if (this.props.variant === \"zone-map\") {\n      return (\n        <svg\n          id=\"court-analysis-diagram\"\n          style={{ width: \"100%\" }}\n          ref={(node) => (this.node = node)}\n        ></svg>\n      );\n    } else {\n      return <Box>shot chart type not defined</Box>;\n    }\n  }\n}\n","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/GradientScale.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/DataEntry.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/Popup.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/LatestShot.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Utils/Helpers.js",["107"],"import { encode } from \"base-64\";\n\nexport default class Helpers {\n    constructor(props) {\n\n    }\n\n    static chartSettings() {\n        var nba = {keyWidth: 16, keyMarks: [7, 8, 11, 14], threePointCutoffLength: 13.9,\n            threePointRadius: 23.75, threePointSideRadius: 22,\n            left3Inside: {x: (-120.94543 + 250) / 10,\n                                    y: 251.89778 / 10},\n            right3Inside: {x: (-120.94543 + 250) / 10,\n                                    y: 251.89778 / 10}};\n\n        var coll = {keyWidth: 12, keyMarks: [11, 14, 17], threePointCutoffLength: 9.865,\n            threePointRadius: 22.146, threePointSideRadius: 21.5,\n            left3Inside: {x: (-112.77716 + 250) / 10,\n                                y: 238.0934 / 10},\n            right3Inside: {x: (-112.77716 + 250) / 10,\n                                y: 238.0934 / 10}};\n\n        return {nba: nba, coll: coll};\n    }\n\n    static fetchMethod(url, method, data) {\n        let base = 'https://api.thehornetsnest.io';\n        return fetch(base + url, {\n            method: method,\n            body: data,\n            headers: {\n                'Content-type': 'application/json',\n                'Accept': 'application/json, text/plain, */*',\n                'Authorization': 'Basic ' + encode('dbeamer:rythyk-2sykmu-xaqrEr')\n            }\n        })\n    }\n\n    static getFetch(url) {\n        return this.fetchMethod(url, \"GET\", null);\n    }\n\n    static deleteFetch(url, data) {\n        return this.fetchMethod(url, \"DELETE\", data);\n    }\n\n    static postFetch(url, data) {\n        return this.fetchMethod(url, \"POST\", data);\n    }\n\n\n}","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Index/TeamSelect.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/Filters.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/CheckboxSelect.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/Loading.tsx",[],["108","109"],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/Navbar.tsx",["110"],"import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport NavButton from './NavButton';\nimport Slide from '@mui/material/Slide';\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\nimport { Avatar } from '@mui/material';\nimport InputIcon from '@mui/icons-material/Input';\nimport AnalyticsIcon from '@mui/icons-material/Analytics';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport hexcatwhite from \"../logos/hexcatwhite.png\";\nimport hexcatblack from \"../logos/hexcatblack.png\";\nconst drawerWidth = 240;\n\ninterface ScrollProps {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  children: React.ReactElement;\n}\n\nfunction HideOnScroll(props: ScrollProps) {\n  const { children } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger();\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\ninterface Props {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  content: React.ReactElement;\n  active: string;\n  theme: any\n  modeFlip: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nexport default function ResponsiveDrawer(props: Props) {\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const modeFlip = props.modeFlip;\n\n  const drawer = (\n    <div>\n      <Toolbar />\n      <Divider />\n      <List>\n        {['Input', 'Analysis'].map((text, index) => (\n          <ListItem button key={text} selected={text === props.active} onClick={() => {\n            if (text === 'Input') {\n              window.location.href = '/'\n            } else if (text === 'Analysis') {\n              window.location.href = '/analysis?defaultTeam=281'\n            }\n          }}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InputIcon /> : <AnalyticsIcon />}\n            </ListItemIcon>\n            <ListItemText disableTypography sx={{ fontWeight: 700, fontFamily: \"Roboto Condensed\" }} primary={text.toUpperCase()} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n    </div>\n  );\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <HideOnScroll>\n        <AppBar position=\"fixed\" sx={{\n          boxShadow: 0,\n          background: props.theme.palette.secondary.main\n        }}>\n          <Toolbar disableGutters sx={{ ml: 4 }}>\n            <IconButton color=\"inherit\" aria-label=\"open drawer\" edge=\"start\"\n              onClick={handleDrawerToggle} sx={{\n                mr: 2, display: { sm: 'none' }\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Box sx={{mr: 1.5}}>\n            <img src={props.theme.palette.mode === 'dark' ? hexcatwhite : hexcatblack} style={{height: \"35px\"}}/>\n            </Box>\n            \n            <Typography variant=\"h3\" color=\"text.primary\" noWrap component=\"div\" sx={{ \"&:hover\": { cursor: \"pointer\" } }} onClick={() => { window.location.href = \"/\" }}>\n              HEXCAT\n            </Typography>\n            <Box flexGrow={1} />\n            <Box sx={{ display: { xs: \"none\", sm: \"flex\" } }}>\n              <NavButton text={\"Input\"} url=\"/\" active={props.active === \"Input\"} theme={props.theme} />\n              <NavButton text={\"Analysis\"} url={\"/analysis?defaultTeam=281\"} active={props.active === \"Analysis\"} theme={props.theme} />\n            </Box>\n            <IconButton sx={{ mr: 2 }} onClick={modeFlip}>\n              {props.theme.palette.mode === 'dark' ? <Brightness7Icon style={{ fill: \"white\" }} /> : <Brightness4Icon style={{ fill: \"#494949\" }} />}\n            </IconButton>\n            <Box sx={{ mr: 4 }}>\n              <Avatar />\n            </Box>\n\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Box\n        component=\"nav\"\n        sx={{ flexShrink: { sm: 0 } }}\n        aria-label=\"mailbox folders\"\n      >\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Drawer\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n          sx={{\n            display: { xs: 'block', sm: 'none' },\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Box>\n      <Box\n        component=\"main\"\n      >\n        <Toolbar />\n        <Box sx={{}}>\n          {props.content}\n        </Box>\n\n      </Box>\n    </Box>\n  );\n}","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/NavButton.tsx",["111"],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport { Typography } from '@mui/material';\n\n\ntype Props = {\n    url: string,\n    text: string\n    active: boolean\n    theme: any\n}\n\nconst NavButton = ({url, text, active, theme} : Props) => {\n    const background = active ? theme.palette.primary.main + \"ff\" : \"#00000000\";\n    const color = active ? \"white\" : theme.palette.text.secondary\n    return <Button  sx={{height: \"56px\", fontWeight: 700, mr: 1, backgroundColor: background, color: color, \"&:hover\": {backgroundColor: theme.palette.primary.main + \"cc\", color: \"white\"}}} onClick={() => {\n        window.location.href = url;\n    }}>{text.toUpperCase()}</Button>\n}\n\nexport default NavButton;","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/Sidebar.tsx",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/StatCard.tsx",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/FilterCheckbox.tsx",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/Undo.tsx",["112"],"import Button from '@material-ui/core/Button';\nimport React from 'react';\n\ntype Props = {\n    undoFunction: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Undo = ({undoFunction: undoFunction}: Props) => {\n    return <Button fullWidth color=\"primary\" variant=\"contained\" onClick={undoFunction}>Undo</Button>\n}\n\nexport default Undo;","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/PageTemplates/LoadingPage.tsx",["113"],"\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { Backdrop, Typography, Box } from '@mui/material';\nimport Loading from '../ComponentTemplates/Loading';\nimport { Theme } from '@mui/material/styles';\n\n\nconst tips = [\n    ['\"Everything negative - pressure, challenges - are all an opportunity for me to rise\"', \"Kobe Bryant\"],\n    ['\"No matter the outcome, my shot is considered a make.\"', \"Drew Dibble\"],\n    ['\"I\\'m like tax. You\\'re going to pay one way or the other.\"', \"Shaq\"],\n    ['\"Success is not an accident, success is actually a choice.\"', \"Stephen Curry\"],\n    ['\"Be the best version of yourself in anything you do. You don\\'t have to live anybody else\\'s story.\"', \"Stephen Curry\"],\n    ['\"Hard work beats talent when talent doesn\\'t work hard.\"', \"Tim Notke/Kevin Durant\"],\n    ['\"Why are frogs so good at basketball? Because they always make jump shots.\"', \"Unknown\"],\n    ['\"The only difference between a good shot and a bad shot is if it goes in or not.\"', \"Charles Barkley\"],\n    ['\"Winning is like deodorant – it comes up and a lot of things don’t stink.\"', \"Doc Rivers\"]\n]\n\ntype Props = {\n    theme: Theme\n}\n\nexport default function LoadingPage(props: Props) {\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const [loadingTip, setLoadingTip] = React.useState([\"\"])\n    useEffect(() => {\n        setLoadingTip(tips[Math.floor(Math.random() * tips.length)])\n    }, []);\n\n    return (\n        <Box>\n            <Backdrop\n                open={true}\n                sx={{ backgroundImage: \"url(https://dbukjj6eu5tsf.cloudfront.net/sidearm.sites/davidsonwildcats.com/images/2019/1/8/BrajkovicMason.png)\" }}\n            />\n            <Backdrop\n                sx={{ opacity: 100, zIndex: (theme) => theme.zIndex.drawer - 1, display: \"flex\", justifyContent: \"center\", alignItems: \"center\", backgroundImage: `linear-gradient(to bottom right, ${props.theme.palette.primary.main + \"B3\"}, #494949FF)` }}\n                open={true}\n                onClick={handleClose}\n            >\n                <Box sx={{ textAlign: \"center\" }}>\n                    <Box sx={{ p: 1 }}>\n                        <Loading />\n                    </Box>\n                    <Box sx={{ p: 1 }}>\n                        <Typography paragraph sx={{ color: \"white\" }}>{loadingTip[0]}<br />{loadingTip[1]}</Typography>\n                    </Box>\n\n                </Box>\n            </Backdrop>\n        </Box>\n    );\n}","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/theme.tsx",["114","115","116"],"import React from \"react\";\nimport { createTheme } from \"@material-ui/core\";\nimport { PaletteMode } from \"@mui/material\";\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\n// color pallete: https://coolors.co/f94144-f3722c-f8961e-f9c74f-90be6d-43aa8b-577590\n\n\nexport const theme = (mode: string) => {\n  if (mode === \"light\") {\n    return createTheme({\n\n      palette: {\n        // palette values for light mode\n        mode: \"light\",\n        primary: {main: \"#AC1A2F\"},\n        secondary: {main: \"#F5F5F5\"},\n        text: {\n          primary: '#000',\n          secondary: \"#494949\",\n        },\n        background: {default: \"#F5F5F5\"}\n      },\n      zIndex: {\n        appBar: 1201,\n      },\n      typography: {\n        fontFamily: \"Roboto Condensed\",\n        h1: {\n          fontSize: 54,\n          fontWeight: 700,\n        },\n        h2: {\n          fontSize: 36,\n          fontWeight: 700,\n        },\n        h3: {\n          fontSize: 28,\n          fontWeight: 700,\n        },\n        button: {\n          fontWeight: 700,\n          fontSize: 18,\n        },\n        h4: {\n          fontSize: 24,\n          fontWeight: 500,\n        },\n        h5: {\n          fontSize: 24,\n          fontWeight: 700,\n        },\n      },\n    });\n  }\n  return createTheme({\n    palette: {\n      // palette values for dark mode\n      mode: \"dark\",\n      primary: {main: \"#AC1A2F\"},\n      secondary: {main: \"#424242\"},\n      text: {\n        primary: '#fff',\n        secondary: \"#F5F5F5\",\n      },\n      background: {default: \"#424242\"}\n    },\n    zIndex: {\n      appBar: 1201,\n    },\n    typography: {\n      fontFamily: \"Roboto Condensed\",\n      h1: {\n        fontSize: 54,\n        fontWeight: 700,\n      },\n      h2: {\n        fontSize: 36,\n        fontWeight: 700,\n      },\n      h3: {\n        fontSize: 28,\n        fontWeight: 700,\n      },\n      button: {\n        fontWeight: 700,\n        fontSize: 18,\n      },\n      h4: {\n        fontSize: 24,\n        fontWeight: 500,\n      },\n      h5: {\n        fontSize: 24,\n        fontWeight: 700,\n      },\n    },\n  });\n}\n\n\n\n","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Index/Index.tsx",["117","118"],"import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport Button from \"@mui/material/Button\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Popup from \"../Shotchart/Popup\";\nimport TeamSelection from \"./TeamSelect\";\nimport Helpers from \"../Utils/Helpers.js\";\nimport { Backdrop, Grid, MenuItem, Typography } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport LoadingPage from \"../PageTemplates/LoadingPage\";\nimport { Box } from \"@mui/system\";\nimport { Theme } from '@mui/material/styles';\nimport hexcatwhite from \"../logos/hexcatwhite.png\";\nimport hexcatblack from \"../logos/hexcatblack.png\";\n\n\n\ninterface Props {\n  theme: Theme\n}\n\ninterface fullSession {\n  sessionid: number,\n  name: string,\n  teamseasonid_1: string,\n  teamseasonid_2: string\n}\n\ninterface Session {\n  sessionid: number,\n  name: string,\n}\n\nexport default function Index(props: Props) {\n  const [teams, setTeams] = React.useState([]);\n  const [sessions, setSessions] = React.useState<fullSession[] | null>(null);\n\n  useEffect(() => {\n    Helpers.getFetch(\"/davidson/sessions\")\n      .then((res) => {\n        res.json().then((data) => {\n          setSessions(data.reverse());\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    Helpers.getFetch(\"/teams?seasonyear=2021&leagueid=COLL&leaguelevel=NCAA1\")\n      .then((res) => {\n        res.json().then((data) => {\n          setTeams(data);\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  // Form data states\n  const [currSession, setCurrSession] = React.useState<Session | null>(null);\n  const [sessionName, setSessionName] = React.useState<string | null>(null);\n  const [team1, setTeam1] = React.useState<number | null>(null);\n  const [team2, setTeam2] = React.useState<number | null>(null);\n  const [sessionType, setSessionType] = React.useState<string>(\"game\");\n\n\n  // Form validation states\n  const [team2Req, setTeam2Req] = React.useState<boolean>(true);\n  const [isNew, setIsNew] = React.useState<boolean>(false);\n  const [errorShow, setErrorShow] = React.useState(false);\n\n  // update team2 requirement based on the state of sessionType\n  useEffect(() => {\n    if (sessionType === \"game\") {\n      setTeam2Req(true);\n    } else {\n      setTeam2Req(false)\n    }\n  }, [sessionType])\n\n  // loading screen until teams and sessions are pulled\n  if (teams.length === 0 && sessions === null) {\n    return <LoadingPage theme={props.theme} />\n  }\n\n  const SubmitButton = <Button variant=\"contained\" onClick={() => {\n    if (isNew) {\n      if (team1 === null || (team2 === null && team2Req) || sessionName === null) {\n        setErrorShow(true);\n      } else {\n        Helpers.postFetch(\"/davidson/sessions\", JSON.stringify([{\n          name: sessionName,\n          dateadded: new Date(),\n          creator: \"Michael\",\n          sessiontype: sessionType,\n          teamseasonid_1: team1,\n          teamseasonid_2: team2,\n        }]))\n          .then((res) => {\n            if (res.status !== 201) {\n              console.log(\"error with post fetch\");\n            } else {\n              res.json().then((data) => {\n                const sessionid = \"sessionid=\" + data[0].sessionid;\n                const firstTeam = \"team1=\" + team1;\n                const secondTeam = \"team2=\" + team2;\n                window.location.href = \"/shotchart?\" + sessionid + \"&\" + firstTeam + \"&\" + secondTeam;\n              });\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n\n    } else {\n      if (currSession !== null) {\n        const sessionid = \"sessionid=\" + currSession.sessionid;\n        const firstTeam = \"team1=\" + team1;\n        const secondTeam = \"team2=\" + team2;\n        window.location.href = \"/shotchart?\" + sessionid + \"&\" + firstTeam + \"&\" + secondTeam;\n      } else {\n        setErrorShow(true);\n      }\n    }\n  }}>Submit</Button>\n\n  const resumeSession = (\n    <Grid container spacing={2}>\n      <Grid item xs={12} sm={8} lg={6}>\n        <TextField fullWidth required select label=\"Select Previous Session\" onChange={(event) => {\n          const sessionInfo = JSON.parse(event.target.value);\n          setTeam1(sessionInfo.teamseasonid_1);\n          setTeam2(sessionInfo.teamseasonid_2);\n          setCurrSession({ sessionid: sessionInfo.sessionid, name: sessionInfo.name });\n          setSessionName(sessionInfo.name);\n        }}>\n          {sessions !== null ? sessions.map((session) => (\n            <MenuItem key={session.sessionid} value={JSON.stringify(session)}>\n              {session.name}\n            </MenuItem>\n          )) : null}\n        </TextField>\n      </Grid>\n      <Grid item xs={12}>\n        {SubmitButton}\n      </Grid>\n    </Grid>\n  );\n\n  const newSession = (\n    <Grid container spacing={2}>\n      <Grid item xs={12} sm={10}>\n        <TextField id=\"session-name\" label=\"Session Name\" variant=\"standard\" required fullWidth onChange={(e) => setSessionName(e.target.value)} />\n      </Grid>\n      <Grid item xs={12} sm={5} className=\"team-selection\">\n        <TeamSelection className=\"team-select\" label=\"Home/Neutral\" teams={teams} required={true} changeTeam={setTeam1} />\n      </Grid>\n      <Grid item xs={12} sm={5}>\n        <TeamSelection className=\"team-select\" label=\"Away/Neutral\" teams={teams} required={team2Req} changeTeam={setTeam2} />\n      </Grid>\n      <Grid item xs={12} className=\"session-type\">\n        <RadioGroup defaultValue=\"game\" aria-label=\"Session Type\" name=\"session-select-group\" onChange={(e) => setSessionType(e.target.value)}>\n          <FormControlLabel sx={{ color: props.theme.palette.text.primary }} value=\"game\" control={<Radio />} label=\"Game\" />\n          <FormControlLabel sx={{ color: props.theme.palette.text.primary }} value=\"scrimmage\" control={<Radio />} label=\"Scrimmage\" />\n          <FormControlLabel sx={{ color: props.theme.palette.text.primary }} value=\"practice\" control={<Radio />} label=\"Practice/Shoot Around\" />\n        </RadioGroup>\n      </Grid>\n      <Grid item xs={12} className=\"session-submit-button\">\n        {SubmitButton}\n      </Grid>\n    </Grid>\n  );\n\n  return <Backdrop open={true} sx={{ p: 2, backgroundImage: `linear-gradient(to bottom right, ${props.theme.palette.primary.main + \"FF\"}, #494949FF)` }}>\n    <Box sx={{ p: 2, mt: 2, boxShadow: 10, borderRadius: \"20px\", maxWidth: \"500px\", backgroundColor: props.theme.palette.secondary.main }}>\n      <Grid sx={{ px: 2 }} container spacing={1}>\n        <Grid item xs={12}>\n          <Typography color=\"text.primary\" variant=\"h2\">SESSIONS</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography color={\"text.secondary\"} sx={{ fontSize: 16 }}>\n            To start or continue a session, please fill in the required\n            information below:\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <FormGroup>\n            <FormControlLabel sx={{ color: props.theme.palette.text.primary }} control={<Checkbox checked={isNew} onChange={() => { setIsNew(!isNew); setTeam1(null); setTeam2(null); setCurrSession(null); }} />} label=\"New Session\" />\n          </FormGroup>\n        </Grid>\n        <Grid item xs={12}>\n          {isNew ? newSession : resumeSession}\n        </Grid>\n      </Grid>\n      <Backdrop open={errorShow} onClick={() => { setErrorShow(false) }} sx={{ zIndex: 2, position: \"absolute\" }}>\n        <Box sx={{ backgroundColor: props.theme.palette.background.default, width: \"60%\", p: 5, borderRadius: \"20px\", boxShadow: 10, display: \"flex\", alignItems: \"center\", justifyContent: \"center\", textAlign: \"center\", flexWrap: \"wrap\" }}>\n          <Grid container spacing={1}>\n          <Grid item xs={12}><img src={props.theme.palette.mode === 'dark' ? hexcatwhite : hexcatblack} style={{maxHeight: \"200px\", margin: 0}}/></Grid>\n          <Grid item xs={12}> <Typography variant=\"h2\">OOPS!</Typography></Grid>\n            <Grid item xs={12}><Typography sx={{ fontSize: 20 }}>Please ensure you have filled out all required fields.<br/>Click anywhere to close this window.</Typography></Grid>\n            \n          </Grid>\n\n\n\n        </Box>\n      </Backdrop>\n    </Box>\n\n  </Backdrop>\n}\n","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/Analysis.tsx",["119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":605,"column":5,"nodeType":"140","messageId":"141","endLine":605,"endColumn":15},{"ruleId":"142","severity":1,"message":"143","line":4,"column":5,"nodeType":"144","messageId":"145","endLine":6,"endColumn":6},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"146","severity":1,"message":"147","line":108,"column":13,"nodeType":"148","endLine":108,"endColumn":114},{"ruleId":"149","severity":1,"message":"150","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":20},{"ruleId":"153","severity":1,"message":"154","line":8,"column":16,"nodeType":"155","messageId":"156","endLine":8,"endColumn":42,"fix":"157"},{"ruleId":"149","severity":1,"message":"158","line":26,"column":12,"nodeType":"151","messageId":"152","endLine":26,"endColumn":16},{"ruleId":"149","severity":1,"message":"159","line":1,"column":8,"nodeType":"151","messageId":"152","endLine":1,"endColumn":13},{"ruleId":"149","severity":1,"message":"160","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":21},{"ruleId":"149","severity":1,"message":"161","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":21},{"ruleId":"149","severity":1,"message":"162","line":9,"column":8,"nodeType":"151","messageId":"152","endLine":9,"endColumn":13},{"ruleId":"146","severity":1,"message":"147","line":204,"column":30,"nodeType":"148","endLine":204,"endColumn":146},{"ruleId":"149","severity":1,"message":"163","line":1,"column":30,"nodeType":"151","messageId":"152","endLine":1,"endColumn":44},{"ruleId":"149","severity":1,"message":"164","line":4,"column":15,"nodeType":"151","messageId":"152","endLine":4,"endColumn":32},{"ruleId":"149","severity":1,"message":"165","line":6,"column":20,"nodeType":"151","messageId":"152","endLine":6,"endColumn":31},{"ruleId":"166","severity":1,"message":"167","line":119,"column":8,"nodeType":"168","endLine":119,"endColumn":15,"suggestions":"169"},{"ruleId":"166","severity":1,"message":"167","line":123,"column":8,"nodeType":"168","endLine":123,"endColumn":18,"suggestions":"170"},{"ruleId":"166","severity":1,"message":"167","line":127,"column":8,"nodeType":"168","endLine":127,"endColumn":16,"suggestions":"171"},{"ruleId":"166","severity":1,"message":"167","line":131,"column":8,"nodeType":"168","endLine":131,"endColumn":17,"suggestions":"172"},{"ruleId":"166","severity":1,"message":"173","line":135,"column":8,"nodeType":"168","endLine":135,"endColumn":19,"suggestions":"174"},{"ruleId":"166","severity":1,"message":"175","line":177,"column":8,"nodeType":"168","endLine":177,"endColumn":18,"suggestions":"176"},{"ruleId":"166","severity":1,"message":"167","line":181,"column":8,"nodeType":"168","endLine":181,"endColumn":22,"suggestions":"177"},{"ruleId":"166","severity":1,"message":"175","line":186,"column":8,"nodeType":"168","endLine":186,"endColumn":22,"suggestions":"178"},{"ruleId":"166","severity":1,"message":"175","line":191,"column":8,"nodeType":"168","endLine":191,"endColumn":14,"suggestions":"179"},{"ruleId":"166","severity":1,"message":"167","line":195,"column":8,"nodeType":"168","endLine":195,"endColumn":26,"suggestions":"180"},{"ruleId":"166","severity":1,"message":"167","line":247,"column":8,"nodeType":"168","endLine":247,"endColumn":22,"suggestions":"181"},{"ruleId":"166","severity":1,"message":"182","line":270,"column":8,"nodeType":"168","endLine":270,"endColumn":16,"suggestions":"183"},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","no-useless-rename","Destructuring assignment undoFunction unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"186","text":"187"},"'open' is assigned a value but never used.","'React' is defined but never used.","'PaletteMode' is defined but never used.","'useMediaQuery' is defined but never used.","'Popup' is defined but never used.","'SyntheticEvent' is defined but never used.","'SelectChangeEvent' is defined but never used.","'FormControl' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterShots'. Either include it or remove the dependency array.","ArrayExpression",["188"],["189"],["190"],["191"],"React Hook useEffect has a missing dependency: 'getFGM'. Either include it or remove the dependency array.",["192"],"React Hook useEffect has a missing dependency: 'filterSessions'. Either include it or remove the dependency array.",["193"],["194"],["195"],["196"],["197"],["198"],"React Hook useEffect has a missing dependency: 'teamseasonid'. Either include it or remove the dependency array.",["199"],"no-global-assign","no-unsafe-negation",[173,199],"undoFunction",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [filterShots, shots]",{"range":"224","text":"225"},"Update the dependencies array to be: [filterShots, shotType]",{"range":"226","text":"227"},"Update the dependencies array to be: [filterShots, rounds]",{"range":"228","text":"229"},"Update the dependencies array to be: [contest, filterShots]",{"range":"230","text":"231"},"Update the dependencies array to be: [getFGM, shotsCopy]",{"range":"232","text":"233"},"Update the dependencies array to be: [filterSessions, sessions]",{"range":"234","text":"235"},"Update the dependencies array to be: [filterShots, sessionsList]",{"range":"236","text":"237"},"Update the dependencies array to be: [filterSessions, sessionTypes]",{"range":"238","text":"239"},"Update the dependencies array to be: [filterSessions, team]",{"range":"240","text":"241"},"Update the dependencies array to be: [filterShots, selectedSessions]",{"range":"242","text":"243"},"Update the dependencies array to be: [filterShots, teamseasonid]",{"range":"244","text":"245"},"Update the dependencies array to be: [player, teamseasonid]",{"range":"246","text":"247"},[4355,4362],"[filterShots, shots]",[4428,4438],"[filterShots, shotType]",[4504,4512],"[filterShots, rounds]",[4578,4587],"[contest, filterShots]",[4642,4653],"[getFGM, shotsCopy]",[6022,6032],"[filterSessions, sessions]",[6100,6114],"[filterShots, sessionsList]",[6231,6245],"[filterSessions, sessionTypes]",[6364,6370],"[filterSessions, team]",[6437,6455],"[filterShots, selectedSessions]",[8081,8095],"[filterShots, teamseasonid]",[8870,8878],"[player, teamseasonid]"]