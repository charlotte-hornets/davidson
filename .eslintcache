[{"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/index.js":"1","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/App.js":"2","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/reportWebVitals.js":"3","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Index/Index.js":"4","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/Shotchart.js":"5","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/Analysis.js":"6","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/theme.js":"7","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/GradientScale.js":"8","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/DataEntry.js":"9","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/Popup.js":"10","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/Undo.js":"11","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/LatestShot.js":"12","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Utils/Helpers.js":"13","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/PageTemplates/LoadingPage.js":"14","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Index/TeamSelect.js":"15","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/Filters.js":"16","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/FilterCheckbox.js":"17","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/CheckboxSelect.js":"18","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/Loading.tsx":"19","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/Navbar.tsx":"20","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/NavButton.tsx":"21","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/Sidebar.tsx":"22","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/StatCard.tsx":"23"},{"size":484,"mtime":1648574723123,"results":"24","hashOfConfig":"25"},{"size":886,"mtime":1642493855253,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1634663283631,"results":"27","hashOfConfig":"25"},{"size":8187,"mtime":1642488977405,"results":"28","hashOfConfig":"25"},{"size":38996,"mtime":1648576465705,"results":"29","hashOfConfig":"25"},{"size":14059,"mtime":1642494287014,"results":"30","hashOfConfig":"25"},{"size":1074,"mtime":1642493512238,"results":"31","hashOfConfig":"25"},{"size":990,"mtime":1639691264185,"results":"32","hashOfConfig":"25"},{"size":6617,"mtime":1642494154378,"results":"33","hashOfConfig":"25"},{"size":473,"mtime":1639514691061,"results":"34","hashOfConfig":"25"},{"size":223,"mtime":1639514691063,"results":"35","hashOfConfig":"25"},{"size":1308,"mtime":1639514691061,"results":"36","hashOfConfig":"25"},{"size":1630,"mtime":1639515491186,"results":"37","hashOfConfig":"25"},{"size":1757,"mtime":1639632949874,"results":"38","hashOfConfig":"25"},{"size":1134,"mtime":1642494017558,"results":"39","hashOfConfig":"25"},{"size":2051,"mtime":1639632802819,"results":"40","hashOfConfig":"25"},{"size":276,"mtime":1639586806956,"results":"41","hashOfConfig":"25"},{"size":1493,"mtime":1639635084344,"results":"42","hashOfConfig":"25"},{"size":423,"mtime":1648575285574,"results":"43","hashOfConfig":"25"},{"size":762,"mtime":1648576059560,"results":"44","hashOfConfig":"25"},{"size":383,"mtime":1648576042303,"results":"45","hashOfConfig":"25"},{"size":588,"mtime":1648576252609,"results":"46","hashOfConfig":"25"},{"size":809,"mtime":1648576400996,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"19k8s7d",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/index.js",[],["98","99"],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/App.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/reportWebVitals.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Index/Index.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/Shotchart.js",["100"],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/Analysis.js",["101","102","103","104","105","106","107","108","109","110","111","112","113"],"import React from \"react\";\nimport { useEffect } from \"react\";\nimport Helpers from \"../Utils/Helpers\";\nimport { Box } from \"@material-ui/system\"\nimport { FormControlLabel, Radio, RadioGroup, TextField, Typography, Button } from \"@mui/material\";\nimport { MenuItem, FormControl, Grid } from \"@material-ui/core\";\nimport LoadingPage from \"../PageTemplates/LoadingPage\";\nimport Shotchart from \"../Shotchart/Shotchart\"\nimport Filters from \"./Filters\";\nimport FilterCheckbox from \"./FilterCheckbox\";\nimport CheckboxSelect from \"./CheckboxSelect\"\nimport StatCard from \"../ComponentTemplates/StatCard\";\n\n\n\nlet initialStatesLoaded = 0;\nlet initialStatesNeeded = 4;\n\n\nexport default function Analysis() {\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const defaultTeam = parseInt(urlParams.get('defaultTeam'))\n\n    const [shots, setShots] = React.useState([])\n    const [shotsCopy, setShotsCopy] = React.useState([])\n    const getFGM = () => {\n        let filtered = shotsCopy\n        filtered = filtered.filter((item) => {return item.make === 1})\n        return filtered.length\n    }\n    const [FGM, setFGM] = React.useState(getFGM)\n    \n    const [chartType, setChartType] = React.useState(\"hex-zone\")\n    const handleChartTypeChange = (event) => {\n        setChartType(event.target.value)\n    }\n\n    //filters\n    const [sessions, setSessions] = React.useState([]);\n    const [sessionsList, setSessionsList] = React.useState([]);\n    const [selectedSessions, setSelectedSessions] = React.useState([]);\n    const handleSelectedSessionsChange = (event) => {\n        setSelectedSessions(event.target.value);\n    }\n\n\n    const [sessionTypes, setSessionTypes] = React.useState([\"game\", \"practice\",\"scrimmage\"]);\n    const handleSessionTypeChange = (event) => {\n        sessionTypes.includes(event.target.value) ? setSessionTypes(sessionTypes.filter((e) => {return e !== event.target.value})) : setSessionTypes([...sessionTypes, event.target.value]);\n    }\n\n\n    const [shotType, setShotType] = React.useState([\"Layup/Dunk\", \"Dribble Jumper\", \"Catch and Shoot\", \"Runner/Floater\", \"Post Move\"])\n    const handleShotTypeChange = (event) => {\n        shotType.includes(event.target.value) ? setShotType(shotType.filter((e) => {return e !== event.target.value})) : setShotType([...shotType, event.target.value]);\n    }\n\n    const [rounds, setRounds] = React.useState([\"1\", \"2\", \"3\", \"4\", \"5\"])\n    const handleRoundChange = (event) => {\n        rounds.includes(event.target.value) ? setRounds(rounds.filter((e) => {return e !== event.target.value})) : setRounds([...rounds, event.target.value]);\n    }\n\n    const [contest, setContest] = React.useState([\"Contested\", \"Uncontested\"])\n    const handleContestChange = (event) => {\n        contest.includes(event.target.value) ? setContest(contest.filter((e) => {return e !== event.target.value})) : setContest([...contest, event.target.value]);\n    }\n\n    const filterShots = () => {\n        let filtered = shots\n        filtered = filtered.filter((shot) => {\n            return shotType.includes(shot.shottype)\n        })\n        filtered = filtered.filter((shot) => {\n            return rounds.includes(String(shot.round))\n        })\n        filtered = filtered.filter((shot) => {\n            return contest.includes(String(shot.contesttype))\n        })\n        filtered = filtered.filter((shot) => {\n            return contest.includes(String(shot.contesttype))\n        })\n        filtered = filtered.filter((shot) => {\n            return selectedSessions.includes(shot.sessionid)\n        })\n        return filtered\n    }\n    \n    useEffect(() => {\n        setShotsCopy(filterShots)\n    }, [shots])\n\n    useEffect(() => {\n        setShotsCopy(filterShots)\n    }, [shotType])\n\n    useEffect(() => {\n        setShotsCopy(filterShots)\n    }, [rounds])\n\n    useEffect(() => {\n        setShotsCopy(filterShots)\n    }, [contest])\n\n    useEffect(() => {\n        setFGM(getFGM)\n    }, [shotsCopy])\n\n    const [teams, setTeams] = React.useState([])\n\n    const [team, setTeam] = React.useState(defaultTeam);\n    const updateTeam = (newTeam) => {\n        setTeam(newTeam)\n    }\n\n    const [player, setPlayer] = React.useState(undefined)\n    const [players, setPlayers] = React.useState([])\n\n    const [teamseasonid, setTeamSeasonId] = React.useState(() => {\n        var seasonid = 0\n        Helpers.getFetch('/team/roster?teamid=' + team + '&seasonyear=2021')\n            .then(res => {\n            res.json().then(data => {\n                seasonid = data[0].teamseasonid;\n                \n            })\n            }).catch(err => {\n                console.log(err);\n        })\n        return seasonid\n    })\n\n    const filterSessions = () => {\n        let filtered = sessions;\n        filtered = filtered.filter((session) => {\n            return sessionTypes.includes(session.sessiontype)});\n        filtered = filtered.filter((session) => {\n            return (session.teamseasonid_1 === team || session.teamseasonid_2 === team)\n        })\n        return filtered.map((session) => session.sessionid)\n    }\n\n    useEffect(() => {\n        setSessionsList(filterSessions);\n        setSelectedSessions(filterSessions);\n    }, [sessions]);\n\n    useEffect(() => {\n        setShotsCopy(filterShots);\n    }, [sessionsList])\n\n    useEffect(() => {\n        setSessionsList(filterSessions);\n        setSelectedSessions(filterSessions)\n    }, [sessionTypes]);\n\n    useEffect(() => {\n        setSessionsList(filterSessions);\n        setSelectedSessions(filterSessions); \n    }, [team])\n\n    useEffect(() => {\n        setShotsCopy(filterShots);\n    }, [selectedSessions])\n    \n    useEffect(() => {\n        initialStatesLoaded = 0;\n        Helpers.getFetch('/davidson/sessions')\n        .then(res => {\n        res.json().then(data => {\n            setSessions(data.reverse());\n            initialStatesLoaded++;\n        })\n        }).catch(err => {\n        console.log(err);\n        });\n\n        Helpers.getFetch('/teams?seasonyear=2021&leagueid=COLL&leaguelevel=NCAA1')\n        .then(res => {\n          res.json().then(data => {\n            setTeams(data);\n            initialStatesLoaded++;\n          })\n        }).catch(err => {\n          console.log(err);\n        });\n    }, [])\n\n    // update team info when team changed\n    useEffect(() => {\n        Helpers.getFetch('/team/roster?teamid=' + team + '&seasonyear=2021')\n            .then(res => {\n            res.json().then(data => {\n                setPlayers(data)\n                setTeamSeasonId(data[0].teamseasonid)\n                initialStatesLoaded++;\n                setPlayer(undefined)\n            })\n            }).catch(err => {\n                console.log(err);\n            })\n    }, [team]);\n\n    // get shots when team info changed\n    useEffect(() => {\n        setShotsCopy(filterShots)\n        Helpers.getFetch('/davidson/shots?teamseasonid=' + teamseasonid)\n        .then(res => {\n            res.json().then(data => {\n                setShots(data)\n                initialStatesLoaded++;\n            })\n            }).catch(err => {\n                console.log(err);\n            })\n    }, [teamseasonid])\n\n    // get player shots when player info changed\n    useEffect(() => {\n        if ( player !== undefined) {\n            Helpers.getFetch('/davidson/shots?teamseasonid=' + teamseasonid + \"&playerid=\" + player)\n            .then(res => {\n                res.json().then(data => {\n                    setShots(data)\n                })\n                }).catch(err => {\n                    console.log(err);\n                })\n        } else {\n            Helpers.getFetch('/davidson/shots?teamseasonid=' + teamseasonid)\n            .then(res => {\n                res.json().then(data => {\n                    setShots(data)\n                })\n                }).catch(err => {\n                    console.log(err);\n                })\n        }\n    }, [player])\n\n    const generateChart = () => {\n        return <Shotchart data={shots.length ? shotsCopy : []} variant={chartType}/>\n    }\n\n    return (initialStatesLoaded >= initialStatesNeeded) ? <Box sx={{p: 2}}>\n        <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n            {teams.length ? <Grid item xs={12} sm={6} md={4}>\n            <Box alignItems=\"center\" display=\"flex\" justifyContent=\"center\" height=\"75px\" sx={{background:\"#FFF\", borderRadius: 2.5, boxShadow: \"rgb(0 0 0 / 20%) 0px 2px 1px -1px, rgb(0 0 0 / 14%) 0px 1px 1px 0px, rgb(0 0 0 / 12%) 0px 1px 3px 0px\", p: 4}}>  \n                <FormControl m=\"auto\" fullWidth>\n                    <TextField select label=\"Team\" value={team} defaultValue={defaultTeam} onChange={(e) => {setTeam(e.target.value)}}>\n                        {teams.map((team) => (<MenuItem key={team.teamname} value={team.teamid}>{team.teamname}</MenuItem>))}\n                    </TextField>\n                </FormControl>\n                </Box> \n                </Grid> : null }\n            {players.length ? (<Grid item xs={12} sm={6} md={4}>\n                <Box alignItems=\"center\" display=\"flex\" justifyContent=\"center\" height=\"75px\" sx={{background:\"#FFF\", borderRadius: 2.5, boxShadow: \"rgb(0 0 0 / 20%) 0px 2px 1px -1px, rgb(0 0 0 / 14%) 0px 1px 1px 0px, rgb(0 0 0 / 12%) 0px 1px 3px 0px\", p: 4}}>     \n                    <FormControl m=\"auto\" fullWidth>\n                        <TextField select label=\"Player\" value={player} onChange={(e) => {setPlayer(e.target.value)}}>\n                            <MenuItem key={\"None\"} value={undefined}>\n                                {\"None\"}\n                            </MenuItem>\n                            {players.map((player) => (\n                                <MenuItem key={player.personname} value={player.personid}>\n                                {player.personname}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </FormControl>\n                </Box>\n            </Grid>) : null}\n            <Grid item xs={12} sm={12} md={4}>\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" height=\"75px\" textAlign=\"center\" sx={{background:\"#FFF\", borderRadius: 2.5, boxShadow: \"rgb(0 0 0 / 20%) 0px 2px 1px -1px, rgb(0 0 0 / 14%) 0px 1px 1px 0px, rgb(0 0 0 / 12%) 0px 1px 3px 0px\", p: 4}}>\n                    <RadioGroup m=\"auto\" row aria-label=\"contested?\" defaultValue={\"hex-zone\"} name=\"\" onChange={handleChartTypeChange}>\n                        <FormControlLabel value={\"hex-zone\"} control={<Radio color=\"primary\" />} label=\"Hex Zones\" />\n                        <FormControlLabel value={\"hex-density\"} control={<Radio color=\"primary\" />} label=\"Hex Density\" />\n                        <FormControlLabel value={\"zone-map\"} control={<Radio color=\"primary\" />} label=\"Zones\" />\n                    </RadioGroup>\n                </Box>\n            </Grid>\n\n            <Grid item xs={12}>\n            <Grid container alignItems=\"flex-start\" justifyContent=\"space-evenly\" spacing={2}>\n                <Grid item md={7} sm={12}>\n                    <Box alignItems=\"center\" sx={{background:\"#FFF\", borderRadius: 2.5, boxShadow: \"rgb(0 0 0 / 20%) 0px 2px 1px -1px, rgb(0 0 0 / 14%) 0px 1px 1px 0px, rgb(0 0 0 / 12%) 0px 1px 3px 0px\", p: 4}}>{generateChart()}</Box>\n                </Grid>\n              <Grid item md={5} sm={12}>\n                    <Box sx={{background:\"#FFF\", borderRadius: 2.5, p: 4, boxShadow: \"rgb(0 0 0 / 20%) 0px 2px 1px -1px, rgb(0 0 0 / 14%) 0px 1px 1px 0px, rgb(0 0 0 / 12%) 0px 1px 3px 0px\", color: \"#494949\"}}>\n                        <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n                            <Grid item xs={12}>\n                                <Typography variant=\"h2\">OPTIONS</Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography variant=\"p\" style={{fontWeight: 700}}>TYPE:</Typography>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <FilterCheckbox value=\"game\" label=\"Game\" change={handleSessionTypeChange}/>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <FilterCheckbox value=\"scrimmage\" label=\"Scrimmage\" change={handleSessionTypeChange}/>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <FilterCheckbox value=\"practice\" label=\"Practice\" change={handleSessionTypeChange}/>\n                            </Grid>\n                            <Grid item xs={8}>\n                                <CheckboxSelect sessions={sessions} validSessions={sessionsList} selected={selectedSessions} change={handleSelectedSessionsChange}/>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <Button variant=\"contained\" onClick={() => {\n                                    JSON.stringify(selectedSessions) === JSON.stringify(sessionsList) ? setSelectedSessions([]) : setSelectedSessions(sessionsList);\n                                }}>Toggle Select</Button>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Filters shotType={handleShotTypeChange} round={handleRoundChange} contested={handleContestChange}/>\n                            </Grid>\n                        </Grid>\n                    </Box>\n              </Grid>\n            </Grid>\n            </Grid>\n            <Grid item xs={4}>\n                <StatCard name=\"FGA\" content={shotsCopy.length}/>\n            </Grid>\n            <Grid item xs={4}>\n                <StatCard name=\"FGM\" content={FGM}/>\n            </Grid>\n            <Grid item xs={4}>\n                <StatCard name=\"FG%\" content={(100 * FGM / shotsCopy.length).toFixed(0) + \"%\"}/>\n            </Grid>\n\n        </Grid>\n    </Box> : <LoadingPage loaded={initialStatesLoaded} needed={initialStatesNeeded}/>;\n}","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/theme.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/GradientScale.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/DataEntry.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/Popup.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/Undo.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Shotchart/LatestShot.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Utils/Helpers.js",["114"],"import { encode } from \"base-64\";\n\nexport default class Helpers {\n    constructor(props) {\n\n    }\n\n    static chartSettings() {\n        var nba = {keyWidth: 16, keyMarks: [7, 8, 11, 14], threePointCutoffLength: 13.9,\n            threePointRadius: 23.75, threePointSideRadius: 22,\n            left3Inside: {x: (-120.94543 + 250) / 10,\n                                    y: 251.89778 / 10},\n            right3Inside: {x: (-120.94543 + 250) / 10,\n                                    y: 251.89778 / 10}};\n\n        var coll = {keyWidth: 12, keyMarks: [11, 14, 17], threePointCutoffLength: 9.865,\n            threePointRadius: 22.146, threePointSideRadius: 21.5,\n            left3Inside: {x: (-112.77716 + 250) / 10,\n                                y: 238.0934 / 10},\n            right3Inside: {x: (-112.77716 + 250) / 10,\n                                y: 238.0934 / 10}};\n\n        return {nba: nba, coll: coll};\n    }\n\n    static fetchMethod(url, method, data) {\n        let base = 'https://api.thehornetsnest.io';\n        return fetch(base + url, {\n            method: method,\n            body: data,\n            headers: {\n                'Content-type': 'application/json',\n                'Accept': 'application/json, text/plain, */*',\n                'Authorization': 'Basic ' + encode('dbeamer:rythyk-2sykmu-xaqrEr')\n            }\n        })\n    }\n\n    static getFetch(url) {\n        return this.fetchMethod(url, \"GET\", null);\n    }\n\n    static deleteFetch(url, data) {\n        return this.fetchMethod(url, \"DELETE\", data);\n    }\n\n    static postFetch(url, data) {\n        return this.fetchMethod(url, \"POST\", data);\n    }\n\n\n}","/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/PageTemplates/LoadingPage.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Index/TeamSelect.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/Filters.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/FilterCheckbox.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/Analysis/CheckboxSelect.js",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/Loading.tsx",[],["115","116"],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/Navbar.tsx",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/NavButton.tsx",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/Sidebar.tsx",[],"/Users/drbeamer/Documents/'Cats Stats/shot/davidson/src/ComponentTemplates/StatCard.tsx",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":418,"column":9,"nodeType":"123","messageId":"124","endLine":418,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":91,"column":8,"nodeType":"127","endLine":91,"endColumn":15,"suggestions":"128"},{"ruleId":"125","severity":1,"message":"126","line":95,"column":8,"nodeType":"127","endLine":95,"endColumn":18,"suggestions":"129"},{"ruleId":"125","severity":1,"message":"126","line":99,"column":8,"nodeType":"127","endLine":99,"endColumn":16,"suggestions":"130"},{"ruleId":"125","severity":1,"message":"126","line":103,"column":8,"nodeType":"127","endLine":103,"endColumn":17,"suggestions":"131"},{"ruleId":"125","severity":1,"message":"132","line":107,"column":8,"nodeType":"127","endLine":107,"endColumn":19,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":112,"column":11,"nodeType":"136","messageId":"137","endLine":112,"endColumn":21},{"ruleId":"125","severity":1,"message":"138","line":146,"column":8,"nodeType":"127","endLine":146,"endColumn":18,"suggestions":"139"},{"ruleId":"125","severity":1,"message":"126","line":150,"column":8,"nodeType":"127","endLine":150,"endColumn":22,"suggestions":"140"},{"ruleId":"125","severity":1,"message":"138","line":155,"column":8,"nodeType":"127","endLine":155,"endColumn":22,"suggestions":"141"},{"ruleId":"125","severity":1,"message":"138","line":160,"column":8,"nodeType":"127","endLine":160,"endColumn":14,"suggestions":"142"},{"ruleId":"125","severity":1,"message":"126","line":164,"column":8,"nodeType":"127","endLine":164,"endColumn":26,"suggestions":"143"},{"ruleId":"125","severity":1,"message":"126","line":216,"column":8,"nodeType":"127","endLine":216,"endColumn":22,"suggestions":"144"},{"ruleId":"125","severity":1,"message":"145","line":239,"column":8,"nodeType":"127","endLine":239,"endColumn":16,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":4,"column":5,"nodeType":"149","messageId":"150","endLine":6,"endColumn":6},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterShots'. Either include it or remove the dependency array.","ArrayExpression",["153"],["154"],["155"],["156"],"React Hook useEffect has a missing dependency: 'getFGM'. Either include it or remove the dependency array.",["157"],"no-unused-vars","'updateTeam' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'filterSessions'. Either include it or remove the dependency array.",["158"],["159"],["160"],["161"],["162"],["163"],"React Hook useEffect has a missing dependency: 'teamseasonid'. Either include it or remove the dependency array.",["164"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [filterShots, shots]",{"range":"189","text":"190"},"Update the dependencies array to be: [filterShots, shotType]",{"range":"191","text":"192"},"Update the dependencies array to be: [filterShots, rounds]",{"range":"193","text":"194"},"Update the dependencies array to be: [contest, filterShots]",{"range":"195","text":"196"},"Update the dependencies array to be: [getFGM, shotsCopy]",{"range":"197","text":"198"},"Update the dependencies array to be: [filterSessions, sessions]",{"range":"199","text":"200"},"Update the dependencies array to be: [filterShots, sessionsList]",{"range":"201","text":"202"},"Update the dependencies array to be: [filterSessions, sessionTypes]",{"range":"203","text":"204"},"Update the dependencies array to be: [filterSessions, team]",{"range":"205","text":"206"},"Update the dependencies array to be: [filterShots, selectedSessions]",{"range":"207","text":"208"},"Update the dependencies array to be: [filterShots, teamseasonid]",{"range":"209","text":"210"},"Update the dependencies array to be: [player, teamseasonid]",{"range":"211","text":"212"},[3682,3689],"[filterShots, shots]",[3755,3765],"[filterShots, shotType]",[3831,3839],"[filterShots, rounds]",[3905,3914],"[contest, filterShots]",[3969,3980],"[getFGM, shotsCopy]",[5208,5218],"[filterSessions, sessions]",[5286,5300],"[filterShots, sessionsList]",[5417,5431],"[filterSessions, sessionTypes]",[5551,5557],"[filterSessions, team]",[5624,5642],"[filterShots, selectedSessions]",[7137,7151],"[filterShots, teamseasonid]",[7902,7910],"[player, teamseasonid]"]